<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security 
                        http://www.springframework.org/schema/security/spring-security-3.0.xsd
                        http://www.springframework.org/schema/util 
                        http://www.springframework.org/schema/util/spring-util.xsd">

	<description>Shiro安全配置</description>
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/admin/login.jsp" /><!-- 登陆页面,即对所有需要authc登陆的请求时，如果未登陆都会被重定向到这里 -->
		<property name="successUrl" value="/admin/common/main" />
		<!-- 登陆成功时，跳转的页面 -->
		<property name="unauthorizedUrl" value="/admin/common/notAuth" />
		<!-- 认证失败时跳到的页面 -->
		<property name="filters">
			<util:map>
				<entry key="authc">
					<!-- 自己实现的formAuthcFilter，加入失败登陆次数 -->
					<bean class="com.xcj.common.shiro.FormAuthenticationWithLockFilter">
						<property name="maxLoginAttempts" value="3" />
					</bean>
				</entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				<!-- /admin/ = anon -->
				/resources/** = anon
				/admin/login.jsp = anon
				<!-- 这个配置必须有，前面的url跟loginUrl的一样。 -->
				/admin/admin/logout = anon
				/admin/admin/sublogin=anon
				/admin/index.jsp=roles[admin]
				/admin/domain/** = perms["admin:domain"]
				/admin/admin/** = perms["admin:admin"]
				/admin/common/** = perms["admin:common"]
				/admin/tag/** = perms["admin:tag"]
				/admin/course/** = perms["admin:course"]
				/admin/questionLibaray/** = perms["admin:questionLibaray"]
				/admin/tests/** = perms["admin:tests"]
				/admin/knowledgePoint/** = perms["admin:knowledgePoint"]
				/admin/course/** = perms["admin:course"]
				/admin/wx/** = perms["admin:wx"]
				/admin/** = authc,roles[admin],roles[common]
				<!-- authc,roles[admin]认证成功的 、并且角色是admin 的才能进入 -->
			</value>
		</property>
	</bean>
	<!-- session 处理开始 -->
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="XCJSESSID" />
		<property name="httpOnly" value="true" />
		<property name="path" value="/" />
		<property name="maxAge" value="180000" />
		<!-- 放到正式环境 <property name="domain" value="xiaochejiang.com"/> -->
		 <property name="domain" value="content.xiaochejiang.com"/>
	</bean>
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" />
		<!-- 30天 -->
	</bean>
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- 会话DAO com.xcj.common.session.ShiroSessionDAO -->
	<!-- org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO -->
	<bean id="sessionDAO" class="com.xcj.common.session.ShiroSessionDAO">
	</bean>
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="1800000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="172800000" /><!-- 2天 -->
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>
	<!-- session 处理结束 -->

	<!-- 用户授权信息Cache, 采用EhCache，需要的话就配置上此信息 -->
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
	    <property name="cacheManager" ref="cacheManager"/>
	</bean>

	<!-- 登陆时与数据库交互的类 -->
	<bean id="shiroDbRealm" class="com.xcj.common.shiro.AuthenticationRealm">
		<property name="authorizationCacheName" value="authorization" />
		<property name="credentialsMatcher" ref="hashedCredentialsMatcher" />
	</bean>


	<bean id="hashedCredentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="MD5" />
		<property name="storedCredentialsHexEncoded" value="true" />
		<property name="hashIterations" value="1" />
	</bean>

	<!-- 非常核心的一个类，控制的基础 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDbRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>


	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

</beans>

